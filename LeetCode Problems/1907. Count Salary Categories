Table: Accounts

+-------------+------+
| Column Name | Type |
+-------------+------+
| account_id  | int  |
| income      | int  |
+-------------+------+
account_id is the primary key (column with unique values) for this table.
Each row contains information about the monthly income for one bank account.
 

Write a solution to calculate the number of bank accounts for each salary category. The salary categories are:

"Low Salary": All the salaries strictly less than $20000.
"Average Salary": All the salaries in the inclusive range [$20000, $50000].
"High Salary": All the salaries strictly greater than $50000.
The result table must contain all three categories. If there are no accounts in a category, return 0.

Return the result table in any order.

The result format is in the following example.

 

Example 1:

Input: 
Accounts table:
+------------+--------+
| account_id | income |
+------------+--------+
| 3          | 108939 |
| 2          | 12747  |
| 8          | 87709  |
| 6          | 91796  |
+------------+--------+
Output: 
+----------------+----------------+
| category       | accounts_count |
+----------------+----------------+
| Low Salary     | 1              |
| Average Salary | 0              |
| High Salary    | 3              |
+----------------+----------------+
Explanation: 
Low Salary: Account 2.
Average Salary: No accounts.
High Salary: Accounts 3, 6, and 8.


--Solution 1


SELECT 'Low Salary' AS category, COUNT(CASE WHEN income < 20000 THEN 1 END) AS accounts_count
FROM Accounts
UNION
SELECT 'Average Salary' AS category, COUNT(CASE WHEN income >= 20000 AND income <= 50000 THEN 1 END) AS accounts_count
FROM Accounts
UNION
SELECT 'High Salary' AS category, COUNT(CASE WHEN income > 50000 THEN 1 END) AS accounts_count
FROM Accounts;

-- this solution is very bad and it perform weakly but it get ur job done without any conflictions , know it for a naive knowledge ^_^

---Solution 2 

select b.category,
count(a.account_id) accounts_count
from Accounts a right outer join (values('High Salary'),('Low Salary'),('Average Salary')) b(category)
on case
when (a.income<20000) then 'Low Salary' 
when (a.income>50000) then 'High Salary'
else 'Average Salary' End
= b.category
group by b.category

-- this solution one of the most perfect Solutions , it makes a Temporary table with values of salary Catgeories .. 
and it joins between 2 tables by right join to print all categories even if one of them have 0 accounts
and the join condition is the Equalize between the actual values of category cols(i.e b.category ) and the condtions of prinitng these values
(i think this join condition will be on of greatest u will seen ever) and finally we will group by b.category to count on every one of them Separtely 







