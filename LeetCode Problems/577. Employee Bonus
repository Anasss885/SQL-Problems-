-- problem

Table: Employee

+-------------+---------+
| Column Name | Type    |
+-------------+---------+
| empId       | int     |
| name        | varchar |
| supervisor  | int     |
| salary      | int     |
+-------------+---------+
empId is the column with unique values for this table.
Each row of this table indicates the name and the ID of an employee in addition to their salary and the id of their manager.
 

Table: Bonus

+-------------+------+
| Column Name | Type |
+-------------+------+
| empId       | int  |
| bonus       | int  |
+-------------+------+
empId is the column of unique values for this table.
empId is a foreign key (reference column) to empId from the Employee table.
Each row of this table contains the id of an employee and their respective bonus.
 

Write a solution to report the name and bonus amount of each employee with a bonus less than 1000.

Return the result table in any order.

The result format is in the following example.

 

Example 1:

Input: 
Employee table:
+-------+--------+------------+--------+
| empId | name   | supervisor | salary |
+-------+--------+------------+--------+
| 3     | Brad   | null       | 4000   |
| 1     | John   | 3          | 1000   |
| 2     | Dan    | 3          | 2000   |
| 4     | Thomas | 3          | 4000   |
+-------+--------+------------+--------+
Bonus table:
+-------+-------+
| empId | bonus |
+-------+-------+
| 2     | 500   |
| 4     | 2000  |
+-------+-------+
Output: 
+------+-------+
| name | bonus |
+------+-------+
| Brad | null  |
| John | null  |
| Dan  | 500   |
+------+-------+



--Soluion 


/* Write your T-SQL query statement below */

select e.name,b.bonus from Employee e
left join Bonus b on e.empId=b.empId
where b.Bonus<1000 or b.bonus is null

/* DECLARATION 
When you use a LEFT JOIN in your SQL query, 
it retrieves all rows from the left table (Employee) and the matching rows from the right table (Bonus), 
and if there is no match in the right table, it still includes the row from the left table with NULL values for the columns from the right table. 
However, when you have a condition in the WHERE clause like b.bonus < 1000, it will filter out rows where b.bonus is less than 1000, 
but it will also filter out rows where b.bonus is NULL.

So, if you want to include employees who don't have a bonus (i.e., b.bonus is NULL) and employees with a bonus less than 1000, 
you need to handle NULL values explicitly.
*/
