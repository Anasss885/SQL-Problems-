-- problem 
Table: Activity

+--------------+---------+
| Column Name  | Type    |
+--------------+---------+
| player_id    | int     |
| device_id    | int     |
| event_date   | date    |
| games_played | int     |
+--------------+---------+
(player_id, event_date) is the primary key (combination of columns with unique values) of this table.
This table shows the activity of players of some games.
Each row is a record of a player who logged in and played a number of games (possibly 0) before logging out on someday using some device.
 

Write a solution to report the fraction of players that logged in again on the day after the day they first logged in, rounded to 2 decimal places. In other words, you need to count the number of players that logged in for at least two consecutive days starting from their first login date, then divide that number by the total number of players.

The result format is in the following example.

 

Example 1:

Input: 
Activity table:
+-----------+-----------+------------+--------------+
| player_id | device_id | event_date | games_played |
+-----------+-----------+------------+--------------+
| 1         | 2         | 2016-03-01 | 5            |
| 1         | 2         | 2016-03-02 | 6            |
| 2         | 3         | 2017-06-25 | 1            |
| 3         | 1         | 2016-03-02 | 0            |
| 3         | 4         | 2018-07-03 | 5            |
+-----------+-----------+------------+--------------+
Output: 
+-----------+
| fraction  |
+-----------+
| 0.33      |
+-----------+
Explanation: 
Only the player with id 1 logged back in after the first day he had logged in so the answer is 1/3 = 0.33
-- solution 

with new_table as (
select player_id , min(event_date) as first_day , dateadd(day,1,min(event_date)) as next_day
from Activity a
group by player_id
)

select round(
   cast(count(*) as float) / (select count(*) from new_table),2) as fraction
    from new_table n inner join Activity a
    on n.player_id=a.player_id and a.event_date=n.next_day

-- CLARIFICATION 
-we created a new table to have the critical columns player id , the first date the player get to game , the first day after signing up to game using DateAdd function.
-after that , in the actual solution we get the number of players that obeys all of our conditions (that written in Join Clause format) by joining the both tables
with each other on the same id (same player ) and this player that must have an event date(logging in date in Activity table) that must equal our alternativ value
in the created new_table (next day column)
- so, the count of players that obeys all of these pervious conditions / the count of all disinct players , gives us the exact fraction value of our target 
-the solution ends , but there's a notice that maight help u more to understand , if you want to change the subquery that we divids on 
to (select count(distinct player_id) from Activity ) instead of (select count(*) from new_table) it will works well also
- My advice : after understanding this solution try to change on it a little and make sure that it still works , this will helps you a lot !





