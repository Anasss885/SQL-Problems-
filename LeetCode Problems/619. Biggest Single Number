Table: MyNumbers

+-------------+------+
| Column Name | Type |
+-------------+------+
| num         | int  |
+-------------+------+
This table may contain duplicates (In other words, there is no primary key for this table in SQL).
Each row of this table contains an integer.
 

A single number is a number that appeared only once in the MyNumbers table.

Find the largest single number. If there is no single number, report null.

The result format is in the following example.

 

Example 1:

Input: 
MyNumbers table:
+-----+
| num |
+-----+
| 8   |
| 8   |
| 3   |
| 3   |
| 1   |
| 4   |
| 5   |
| 6   |
+-----+
Output: 
+-----+
| num |
+-----+
| 6   |
+-----+
Explanation: The single numbers are 1, 4, 5, and 6.
Since 6 is the largest single number, we return it.
Example 2:

Input: 
MyNumbers table:
+-----+
| num |
+-----+
| 8   |
| 8   |
| 7   |
| 7   |
| 3   |
| 3   |
| 3   |
+-----+
Output: 
+------+
| num  |
+------+
| null |
+------+
Explanation: There are no single numbers in the input table so we return null.

-- solution 1 
SELECT ISNULL(
    (SELECT TOP 1 num 
     FROM MyNumbers
     GROUP BY num
     HAVING COUNT(num) = 1
     ORDER BY num DESC),
    NULL) AS num;

-- this solution is much effecient with runtime complexity , as it beats more than 80% of other solutions to this problem , Simply if
u deal with it line by line firstly it collects all single numbers (using inner select) 
and by ordering it descindengly and get top 1 (the first number in descinding order) we almost get 90% of what we want 
the rest 10% in printing null if we didn't have any single number in the column , i handle this last piece by using ISNULL function
,please search on this fn to know more about its mechanism!
--

-- Solution 2
think wisely about solving this problem with Subquery , it has alot of solutions using subquery 
